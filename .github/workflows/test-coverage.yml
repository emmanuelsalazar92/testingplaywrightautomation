name: Test Coverage Validation

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  test-coverage:
    name: Test Coverage Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Run tests with coverage
      run: npm run ci:coverage
      
    - name: Analyze coverage results
      run: |
        # Check if coverage report exists
        if [ -f "test-results/coverage.json" ]; then
          echo "📊 Coverage report found"
          
          # Extract coverage percentage (simplified - you might need to adjust based on actual report format)
          COVERAGE_PERCENTAGE=$(node -e "
            try {
              const coverage = require('./test-results/coverage.json');
              const totalCoverage = coverage.total || coverage.summary?.total || 0;
              console.log(Math.round(totalCoverage * 100));
            } catch (e) {
              console.log('0');
            }
          ")
          
          echo "📈 Current coverage: ${COVERAGE_PERCENTAGE}%"
          
          # Minimum coverage threshold (80%)
          MIN_COVERAGE=80
          
          if [ "$COVERAGE_PERCENTAGE" -ge "$MIN_COVERAGE" ]; then
            echo "✅ Coverage threshold met (${COVERAGE_PERCENTAGE}% >= ${MIN_COVERAGE}%)"
            exit 0
          else
            echo "❌ Coverage threshold not met (${COVERAGE_PERCENTAGE}% < ${MIN_COVERAGE}%)"
            exit 1
          fi
        else
          echo "❌ No coverage report found"
          exit 1
        fi
      
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: test-results/
        retention-days: 30
        
    - name: Comment PR with coverage results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          try {
            // Try to read coverage data
            let coveragePercentage = 0;
            const coveragePath = 'test-results/coverage.json';
            
            if (fs.existsSync(coveragePath)) {
              const coverage = JSON.parse(fs.readFileSync(coveragePath, 'utf8'));
              coveragePercentage = Math.round((coverage.total || coverage.summary?.total || 0) * 100);
            }
            
            const minCoverage = 80;
            
            if (coveragePercentage >= minCoverage) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `✅ **Test Coverage Validation Passed**\n\n📊 Current coverage: **${coveragePercentage}%**\n🎯 Minimum required: **${minCoverage}%**\n\nGreat job maintaining high test coverage!`
              });
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `❌ **Test Coverage Validation Failed**\n\n📊 Current coverage: **${coveragePercentage}%**\n🎯 Minimum required: **${minCoverage}%**\n\nPlease add more tests to reach the minimum coverage threshold.`
              });
            }
          } catch (error) {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ **Test Coverage Validation Failed**\n\nCould not analyze coverage results. Please ensure tests are running correctly and generating coverage reports.'
            });
          } 