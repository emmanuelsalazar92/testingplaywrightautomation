name: CI Playwright E2E Suite

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

# Global environment variables
env:
  NODE_VERSION: lts/*

jobs:
  # ============================================================================
  # PARALLEL VALIDATION JOBS (run independently)
  # ============================================================================

  lint:
    name: ESLint & TypeScript Validation
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Type check
        run: npm run type-check

  validate-branch-name:
    name: Branch Naming Convention
    runs-on: ubuntu-latest
    timeout-minutes: 2
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate branch name
        run: |
          BRANCH_NAME="${{ github.head_ref }}"

          # Branch naming patterns
          FEATURE_PATTERN="^feature/"
          BUGFIX_PATTERN="^bugfix/"
          HOTFIX_PATTERN="^hotfix/"

          echo "üîç Validating branch name: $BRANCH_NAME"

          if [[ $BRANCH_NAME =~ $FEATURE_PATTERN ]] || \
             [[ $BRANCH_NAME =~ $BUGFIX_PATTERN ]] || \
             [[ $BRANCH_NAME =~ $HOTFIX_PATTERN ]]; then
            echo "‚úÖ Branch name follows convention"
            exit 0
          else
            echo "‚ùå Branch name does not follow convention"
            echo "Expected patterns:"
            echo "  - feature/description (e.g., feature/login-automation)"
            echo "  - bugfix/description (e.g., bugfix/login-error-handling)"
            echo "  - hotfix/description (e.g., hotfix/critical-login-fix)"
            exit 1
          fi

  validate-console:
    name: Console Clean Validation
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Validate console output
        run: npm run validate:console

  validate-locators:
    name: Locator Duplicate Validation
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Validate locators for duplicates
        run: npm run validate:locators

  validate-naming:
    name: Naming Convention Validation
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Validate naming conventions
        run: npm run validate:naming

  # ============================================================================
  # DEPENDENT JOBS (require lint to pass first)
  # ============================================================================

  playwright-tests:
    name: Playwright E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs:
      [
        lint,
        validate-branch-name,
        validate-console,
        validate-locators,
        validate-naming,
      ]
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3]
        shardTotal: [3]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.shardIndex }}
          path: |
            playwright-report/
            test-results/
          retention-days: 30

  # ============================================================================
  # POST-PROCESSING JOBS (run after all tests complete)
  # ============================================================================

  merge-test-results:
    name: Merge Test Results
    runs-on: ubuntu-latest
    needs: playwright-tests
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          path: playwright-report/
          pattern: playwright-report-*
          merge-multiple: true

      - name: Upload merged test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

